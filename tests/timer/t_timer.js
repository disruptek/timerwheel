/* Generated by the Nim Compiler v1.3.5 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI12390631 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12980044 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3410020 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11798253 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11798202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11820039 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11798259 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11798227 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11798239 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11798320 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11798316 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11798315 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11798251 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI2418066 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI11798272 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11798235 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11798204 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11798262 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11798229 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11798265 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11798231 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11798268 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11798233 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11798241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11798276 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11798237 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11798243 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2424235 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3675528 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2424241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2418054 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI12921015 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12931002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12931017 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12931014 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3655276 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2418019 = {size: 0,kind: 26,base: null,node: null,finalizer: null};
var NTI2418058 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI2418046 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI3655206 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3655239 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3655234 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3655230 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3655227 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3655249 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3655242 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3655210 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3655273 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI3655274 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI3655267 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI3655262 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI3655212 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2424253 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2424018 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2424004 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI2424233 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2424237 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2424008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2424328 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI2418017 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI2424323 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI2424217 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2424219 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2424249 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2418015 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI2424249 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2424249.node = NNI2424249;
var NNI2424219 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2424219.node = NNI2424219;
NTI2424323.base = NTI2424217;
NTI2424328.base = NTI2424217;
var NNI2424217 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI2424323, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI2418017, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI2418015, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI2418015, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI2424328, name: "up", sons: null}]};
NTI2424217.node = NNI2424217;
var NNI2424008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2424008.node = NNI2424008;
NTI2424217.base = NTI2424008;
NTI2424219.base = NTI2424217;
NTI2424249.base = NTI2424219;
var NNI2424237 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2424237.node = NNI2424237;
var NNI2424233 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2424233.node = NNI2424233;
NTI2424233.base = NTI2424219;
NTI2424237.base = NTI2424233;
NTI2424004.base = NTI2424018;
var NNI2424253 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2424253.node = NNI2424253;
NTI2424253.base = NTI2424219;
NTI3655262.base = NTI2424004;
NTI3655267.base = NTI2424004;
NTI3655234.base = NTI3655230;
NTI3655239.base = NTI3655230;
var NNI3655206 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "finishAt", len: 0, typ: NTI2424004, name: "finishAt", sons: null}, 
{kind: 1, offset: "timeout", len: 0, typ: NTI2424004, name: "timeout", sons: null}, 
{kind: 1, offset: "repeatTimes", len: 0, typ: NTI2418046, name: "repeatTimes", sons: null}, 
{kind: 1, offset: "level", len: 0, typ: NTI2418058, name: "level", sons: null}, 
{kind: 1, offset: "scheduleAt", len: 0, typ: NTI2418058, name: "scheduleAt", sons: null}, 
{kind: 1, offset: "userData", len: 0, typ: NTI2418019, name: "userData", sons: null}, 
{kind: 1, offset: "cb", len: 0, typ: NTI3655276, name: "cb", sons: null}]};
NTI3655206.node = NNI3655206;
var NNI3655230 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3655234, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3655239, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3655206, name: "value", sons: null}]};
NTI3655230.node = NNI3655230;
NTI3655227.base = NTI3655230;
var NNI3655249 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3655227, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3655227, name: "tail", sons: null}]};
NTI3655249.node = NNI3655249;
var NNI3655242 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3655249, name: "data", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI2424004, name: "count", sons: null}]};
NTI3655242.node = NNI3655242;
NTI3655210.base = NTI3655242;
NTI3655273.base = NTI3655210;
NTI3655274.base = NTI3655273;
var NNI3655212 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "taskCounter", len: 0, typ: NTI2424004, name: "taskCounter", sons: null}, 
{kind: 1, offset: "duration", len: 0, typ: NTI3655262, name: "duration", sons: null}, 
{kind: 1, offset: "currentTime", len: 0, typ: NTI2424004, name: "currentTime", sons: null}, 
{kind: 1, offset: "now", len: 0, typ: NTI3655267, name: "now", sons: null}, 
{kind: 1, offset: "slots", len: 0, typ: NTI3655274, name: "slots", sons: null}]};
NTI3655212.node = NNI3655212;
var NNI12921015 = {kind: 1, offset: "ticks", len: 0, typ: NTI2418054, name: "ticks", sons: null};
NTI12921015.node = NNI12921015;
var NNI12931002 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "finishAt", len: 0, typ: NTI12921015, name: "finishAt", sons: null}, 
{kind: 1, offset: "finishTick", len: 0, typ: NTI2424004, name: "finishTick", sons: null}]};
NTI12931002.node = NNI12931002;
NTI12931017.base = NTI12931002;
var NNI12931014 = {kind: 1, offset: "data", len: 0, typ: NTI12931017, name: "data", sons: null};
NTI12931014.node = NNI12931014;
var NNI2424241 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2424241.node = NNI2424241;
NTI2424241.base = NTI2424219;
var NNI3675528 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2418058, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2418058, name: "Field1", sons: null}]};
NTI3675528.node = NNI3675528;
var NNI2424235 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2424235.node = NNI2424235;
NTI2424235.base = NTI2424233;
NTI11798237.base = NTI11798276;
var NNI11798243 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI2418054, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI11798237, name: "nanosecond", sons: null}]};
NTI11798243.node = NNI11798243;
NTI11798233.base = NTI11798268;
NTI11798231.base = NTI11798265;
NTI11798229.base = NTI11798262;
var NNI11798204 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI11798204, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI11798204, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11798204, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI11798204, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI11798204, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI11798204, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI11798204, name: "Sunday", len: 0, sons: null}}};
NTI11798204.node = NNI11798204;
NTI11798235.base = NTI11798272;
var NNI11798315 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI11798316, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI11798320, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI2418015, name: "name", sons: null}]};
NTI11798315.node = NNI11798315;
NTI11798251.base = NTI11798315;
var NNI11798241 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI11798237, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI11798233, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI11798231, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI11798229, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI2418046, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI2418046, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI2418046, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI11798204, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI11798235, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI2418066, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI11798251, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI2418046, name: "utcOffset", sons: null}]};
NTI11798241.node = NNI11798241;
NTI11798241.base = NTI2424008;
var NNI11798239 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI2418054, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI11798237, name: "nanosecond", sons: null}]};
NTI11798239.node = NNI11798239;
NTI11798227.base = NTI11798259;
var NNI11798202 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI11798202, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11798202, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI11798202, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI11798202, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI11798202, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI11798202, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI11798202, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI11798202, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI11798202, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI11798202, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI11798202, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI11798202, name: "December", len: 0, sons: null}}};
NTI11798202.node = NNI11798202;
var NNI11820039 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11798227, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI11798202, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2418046, name: "Field2", sons: null}]};
NTI11820039.node = NNI11820039;
var NNI11798253 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI11798239, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI2418046, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI2418066, name: "isDst", sons: null}]};
NTI11798253.node = NNI11798253;
var NNI3410020 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI2418046, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI2418046, name: "b", sons: null}]};
NTI3410020.node = NNI3410020;
var NNI12980044 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2418046, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI2418066, name: "has", sons: null}]};
NTI12980044.node = NNI12980044;
var NNI12390631 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2418046, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI2418066, name: "has", sons: null}]};
NTI12390631.node = NNI12390631;
function makeNimstrLit(c_2685062) {
      var ln = c_2685062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_2685062.charCodeAt(i);
  }
  return result;
  

  
}
function cstrToNimstr(c_2685079) {
      var ln = c_2685079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_2685079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_2685079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_2700023, src_2700024, ti_2700025) {
  var result_2705219 = null;

    switch (ti_2700025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_2695401(ti_2700025))) {
      result_2705219 = src_2700024;
      }
      else {
        result_2705219 = [src_2700024[0], src_2700024[1]];
      }
      
      break;
    case 19:
            if (dest_2700023 === null || dest_2700023 === undefined) {
        dest_2700023 = {};
      }
      else {
        for (var key in dest_2700023) { delete dest_2700023[key]; }
      }
      for (var key in src_2700024) { dest_2700023[key] = src_2700024[key]; }
      result_2705219 = dest_2700023;
    
      break;
    case 18:
    case 17:
      if (!((ti_2700025.base == null))) {
      result_2705219 = nimCopy(dest_2700023, src_2700024, ti_2700025.base);
      }
      else {
      if ((ti_2700025.kind == 17)) {
      result_2705219 = (dest_2700023 === null || dest_2700023 === undefined) ? {m_type: ti_2700025} : dest_2700023;
      }
      else {
        result_2705219 = (dest_2700023 === null || dest_2700023 === undefined) ? {} : dest_2700023;
      }
      }
      nimCopyAux(result_2705219, src_2700024, ti_2700025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_2700024 === null) {
        result_2705219 = null;
      }
      else {
        if (dest_2700023 === null || dest_2700023 === undefined) {
          dest_2700023 = new Array(src_2700024.length);
        }
        else {
          dest_2700023.length = src_2700024.length;
        }
        result_2705219 = dest_2700023;
        for (var i = 0; i < src_2700024.length; ++i) {
          result_2705219[i] = nimCopy(result_2705219[i], src_2700024[i], ti_2700025.base);
        }
      }
    
      break;
    case 28:
            if (src_2700024 !== null) {
        result_2705219 = src_2700024.slice(0);
      }
    
      break;
    default: 
      result_2705219 = src_2700024;
      break;
    }

  return result_2705219;

}
function toJSStr(s_2685096) {
                    var Tmp5;
            var Tmp7;

  var result_2685097 = null;

    var res_2685170 = newSeq_2685128((s_2685096).length);
    var i_2685172 = 0;
    var j_2685174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_2685172 < (s_2685096).length)) break L2;
          var c_2685175 = s_2685096[i_2685172];
          if ((c_2685175 < 128)) {
          res_2685170[j_2685174] = String.fromCharCode(c_2685175);
          i_2685172 += 1;
          }
          else {
            var helper_2685198 = newSeq_2685128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_2685199 = c_2685175.toString(16);
                  if (((code_2685199).length == 1)) {
                  helper_2685198.push("%0");;
                  }
                  else {
                  helper_2685198.push("%");;
                  }
                  
                  helper_2685198.push(code_2685199);;
                  i_2685172 += 1;
                    if (((s_2685096).length <= i_2685172)) Tmp5 = true; else {                      Tmp5 = (s_2685096[i_2685172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_2685175 = s_2685096[i_2685172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_2685170[j_2685174] = decodeURIComponent(helper_2685198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_2685170[j_2685174] = helper_2685198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_2685174 += 1;
        }
    } while(false);
    if (res_2685170.length < j_2685174) { for (var i=res_2685170.length;i<j_2685174;++i) res_2685170.push(null); }
               else { res_2685170.length = j_2685174; };
    result_2685097 = res_2685170.join("");

  return result_2685097;

}
function raiseException(e_2650218, ename_2650219) {
    e_2650218.name = ename_2650219;
    if ((excHandler == 0)) {
    unhandledException(e_2650218);
    }
    
    throw e_2650218;

  
}
function chckIndx(i_2710086, a_2710087, b_2710088) {
      var Tmp1;

  var result_2710089 = 0;

  BeforeRet: do {
      if (!(a_2710087 <= i_2710086)) Tmp1 = false; else {        Tmp1 = (i_2710086 <= b_2710088);      }    if (Tmp1) {
    result_2710089 = i_2710086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_2710086, a_2710087, b_2710088);
    }
    
  } while (false);

  return result_2710089;

}
function mulInt(a_2690455, b_2690456) {
        var result = a_2690455 * b_2690456;
    checkOverflowInt(result);
    return result;
  

  
}
function chckRange(i_2715016, a_2715017, b_2715018) {
      var Tmp1;

  var result_2715019 = 0;

  BeforeRet: do {
      if (!(a_2715017 <= i_2715016)) Tmp1 = false; else {        Tmp1 = (i_2715016 <= b_2715018);      }    if (Tmp1) {
    result_2715019 = i_2715016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_2715019;

}
function addInt(a_2690419, b_2690420) {
        var result = a_2690419 + b_2690420;
    checkOverflowInt(result);
    return result;
  

  
}
function subInt(a_2690437, b_2690438) {
        var result = a_2690437 - b_2690438;
    checkOverflowInt(result);
    return result;
  

  
}
function divInt(a_2690473, b_2690474) {
        if (b_2690474 == 0) raiseDivByZero();
    if (b_2690474 == -1 && a_2690473 == 2147483647) raiseOverflow();
    return Math.trunc(a_2690473 / b_2690474);
  

  
}
    var unitWeights_11798382 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];
function modInt(a_2690491, b_2690492) {
        if (b_2690492 == 0) raiseDivByZero();
    if (b_2690492 == -1 && a_2690491 == 2147483647) raiseOverflow();
    return Math.trunc(a_2690491 % b_2690492);
  

  
}
function absInt(a_2690666) {
    var Tmp1;

  var result_2690667 = 0;

    if ((a_2690666 < 0)) {
    Tmp1 = (a_2690666 * -1);
    }
    else {
    Tmp1 = a_2690666;
    }
    
    result_2690667 = Tmp1;

  return result_2690667;

}
    var daysUntilMonthLeap_11825107 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
      var daysUntilMonth_11825091 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
function genericReset(x_2710044, ti_2710045) {
  var result_2710046 = null;

    result_2710046 = null;
    switch (ti_2710045.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_2695401(ti_2710045)) {
              result_2710046 = [null, 0];
      
      }
      
      break;
    case 19:
            result_2710046 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_2710045.kind == 17)) {
      result_2710046 = {m_type: ti_2710045};
      }
      else {
        result_2710046 = {};
      }
      
      break;
    case 24:
    case 27:
            result_2710046 = [];
    
      break;
    case 4:
    case 16:
            result_2710046 = new Array(x_2710044.length);
      for (var i = 0; i < x_2710044.length; ++i) {
        result_2710046[i] = genericReset(x_2710044[i], ti_2710045.base);
      }
    
      break;
    default: 
      break;
    }

  return result_2710046;

}
var globalRaiseHook_2587018 = [null];
var localRaiseHook_2587023 = [null];
var outOfMemHook_2587026 = [null];
var unhandledExceptionHook_2587031 = [null];
var utcInstance_12350231 = [null];
var localInstance_12350232 = [null];
function isFatPointer_2695401(ti_2695403) {
  var result_2695404 = false;

  BeforeRet: do {
    result_2695404 = !((ConstSet1[ti_2695403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_2695404;

}
function nimCopyAux(dest_2700028, src_2700029, n_2700031) {
    switch (n_2700031.kind) {
    case 0:
      break;
    case 1:
            dest_2700028[n_2700031.offset] = nimCopy(dest_2700028[n_2700031.offset], src_2700029[n_2700031.offset], n_2700031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_2700031.sons.length; i++) {
      nimCopyAux(dest_2700028, src_2700029, n_2700031.sons[i]);
    }
    
      break;
    case 3:
            dest_2700028[n_2700031.offset] = nimCopy(dest_2700028[n_2700031.offset], src_2700029[n_2700031.offset], n_2700031.typ);
      for (var i = 0; i < n_2700031.sons.length; ++i) {
        nimCopyAux(dest_2700028, src_2700029, n_2700031.sons[i][1]);
      }
    
      break;
    }

  
}
function add_2587042(x_2587045, x_2587045_Idx, y_2587046) {
          if (x_2587045[x_2587045_Idx] === null) { x_2587045[x_2587045_Idx] = []; }
      var off = x_2587045[x_2587045_Idx].length;
      x_2587045[x_2587045_Idx].length += y_2587046.length;
      for (var i = 0; i < y_2587046.length; ++i) {
        x_2587045[x_2587045_Idx][off+i] = y_2587046.charCodeAt(i);
      }
    

  
}
function newSeq_2685128(len_2685131) {
  var result_2685133 = [];

    result_2685133 = new Array(len_2685131); for (var i=0;i<len_2685131;++i) {result_2685133[i]=null;}
  return result_2685133;

}
function unhandledException(e_2645059) {
    var buf_2645060 = [[]];
    if (!(((e_2645059.message).length == 0))) {
    buf_2645060[0].push.apply(buf_2645060[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_2645060[0].push.apply(buf_2645060[0], e_2645059.message);;
    }
    else {
    buf_2645060[0].push.apply(buf_2645060[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_2645060[0].push.apply(buf_2645060[0], makeNimstrLit(" ["));;
    add_2587042(buf_2645060, 0, e_2645059.name);
    buf_2645060[0].push.apply(buf_2645060[0], makeNimstrLit("]\x0A"));;
    var cbuf_2650201 = toJSStr(buf_2645060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_2650201);
  }
  else {
    throw cbuf_2650201;
  }
  

  
}
function raiseIndexError(i_2670047, a_2670048, b_2670049) {
    var Tmp1;

    if ((b_2670049 < a_2670048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_2670047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_2670048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_2670049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI2418015), parent: null, m_type: NTI2424249, name: null, trace: [], up: null}, "IndexDefect");

  
}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI2424237, name: null, trace: [], up: null}, "OverflowDefect");

  
}
function checkOverflowInt(a_2690403) {
        if (a_2690403 > 2147483647 || a_2690403 < -2147483648) raiseOverflow();
  

  
}
function HEX2AHEX3D_3655314(x_3655318, x_3655318_Idx, y_3655319) {
    x_3655318[x_3655318_Idx] = mulInt(x_3655318[x_3655318_Idx], y_3655319);

  
}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI2424253, name: null, trace: [], up: null}, "RangeDefect");

  
}
function HEX5E_3655305(x_3655308, y_3655309) {
  var result_3655310 = [0];

    switch (y_3655309) {
    case 0:
      result_3655310[0] = 1;
      break;
    case 1:
      result_3655310[0] = x_3655308;
      break;
    case 2:
      result_3655310[0] = mulInt(x_3655308, x_3655308);
      break;
    case 3:
      result_3655310[0] = mulInt(mulInt(x_3655308, x_3655308), x_3655308);
      break;
    default: 
      var colontmp__13090279 = {Field0: x_3655308, Field1: nimCopy(null, y_3655309, NTI2424004)};
      var x_3655312 = [colontmp__13090279["Field0"]];
      var y_3655313 = colontmp__13090279["Field1"];
      result_3655310[0] = 1;
      L1: do {
          L2: while (true) {
          if (!true) break L2;
            if (!(((y_3655313 & 1) == 0))) {
            HEX2AHEX3D_3655314(result_3655310, 0, x_3655312[0]);
            }
            
            y_3655313 = chckRange((y_3655313 >> 1), 0, 2147483647);
            if ((y_3655313 == 0)) {
            break L1;
            }
            
            HEX2AHEX3D_3655314(x_3655312, 0, x_3655312[0]);
          }
      } while(false);
      break;
    }

  return result_3655310[0];

}
function initTimerWheel_3655292() {
  var result_3655294 = ({taskCounter: 0, duration: [0, 0, 0, 0], currentTime: 0, now: [0, 0, 0, 0], slots: [[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]]});

    L1: do {
      var level_3655303 = 0;
      var i_13090264 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_13090264 < 4)) break L3;
            level_3655303 = i_13090264;
            result_3655294.duration[chckIndx(level_3655303, 0, (result_3655294.duration).length-1)] = chckRange(HEX5E_3655305(16, chckRange(addInt(level_3655303, 1), 0, 2147483647)), 0, 2147483647);
            L4: do {
              var idx_3655385 = 0;
              var i_13090262 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(i_13090262 < 16)) break L6;
                    idx_3655385 = i_13090262;
                    result_3655294.slots[chckIndx(level_3655303, 0, (result_3655294.slots).length-1)][chckIndx(idx_3655385, 0, (result_3655294.slots[chckIndx(level_3655303, 0, (result_3655294.slots).length-1)]).length-1)] = ({data: ({head: null, tail: null}), count: 0});
                    i_13090262 = addInt(i_13090262, 1);
                  }
              } while(false);
            } while(false);
            i_13090264 = addInt(i_13090264, 1);
          }
      } while(false);
    } while(false);

  return result_3655294;

}
function initHeapQueue_12931078() {
  var result_12931082 = ({data: []});

  return result_12931082;

}
function getJsTicks_12921201() {
  var result_12921203 = 0.0;

          var isNode = typeof module !== 'undefined' && module.exports

      if (isNode) {
        var process = require('process');
        var time = process.hrtime()
        return time[0] + time[1] / 1000000000;
      } else {
        return window.performance.now() / 1000;
      }
    

  return result_12921203;

}
function getMonoTime_12921414() {
  var result_12921416 = ({ticks: 0});

    var ticks_12921601 = getJsTicks_12921201();
    nimCopy(result_12921416, {ticks: (ticks_12921601 * 1.0000000000000000e+009)}, NTI12921015);

  return result_12921416;

}
function initTimer_12931072(interval_12931075) {
  var result_12931076 = ({wheel: ({taskCounter: 0, duration: [0, 0, 0, 0], currentTime: 0, now: [0, 0, 0, 0], slots: [[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]]}), queue: ({data: []}), start: ({ticks: 0}), interval: 0});

    nimCopy(result_12931076.wheel, initTimerWheel_3655292(), NTI3655212);
    nimCopy(result_12931076.queue, initHeapQueue_12931078(), NTI12931014);
    nimCopy(result_12931076.start, getMonoTime_12921414(), NTI12921015);
    result_12931076.interval = interval_12931075;

  return result_12931076;

}
function initTimerEvent_3660014(cb_3660016, userData_3660017, userData_3660017_Idx) {
  var result_3660018 = ({finishAt: 0, timeout: 0, repeatTimes: 0, level: 0, scheduleAt: 0, userData: [null, 0], cb: null});

    nimCopy(result_3660018, {cb: cb_3660016, userData: [userData_3660017, userData_3660017_Idx], finishAt: 0, timeout: 0, repeatTimes: 0, level: 0, scheduleAt: 0}, NTI3655206);

  return result_3660018;

}
function newDoublyLinkedNode_3705001(value_3705004) {
  var result_3705006 = null;

    result_3705006 = ({next: null, prev: null, value: ({finishAt: 0, timeout: 0, repeatTimes: 0, level: 0, scheduleAt: 0, userData: [null, 0], cb: null})});
    nimCopy(result_3705006.value, value_3705004, NTI3655206);

  return result_3705006;

}
function sysFatal_2535418(message_2535422) {
    raiseException({message: nimCopy(null, message_2535422, NTI2418015), m_type: NTI2424241, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}
function raiseAssert_2535414(msg_2535416) {
    sysFatal_2535418(msg_2535416);

  
}
function failedAssertImpl_2535480(msg_2535482) {
    raiseAssert_2535414(msg_2535482);

  
}
function append_3665375(L_3665380, n_3665382) {
    n_3665382.next = null;
    n_3665382.prev = L_3665380.tail;
    if (!((L_3665380.tail == null))) {
    if (!((L_3665380.tail.next == null))) {
    failedAssertImpl_2535480(makeNimstrLit("lists.nim(460, 11) `L.tail.next == nil` "));
    }
    
    L_3665380.tail.next = n_3665382;
    }
    
    L_3665380.tail = n_3665382;
    if ((L_3665380.head == null)) {
    L_3665380.head = n_3665382;
    }
    

  
}
function append_3665106(L_3665108, ev_3665109) {
    append_3665375(L_3665108.data, ev_3665109);
    L_3665108.count = addInt(L_3665108.count, 1);

  
}
function setTimer_3675548(s_3675551, eventNode_3675552, level_3675553, scheduleAt_3675554) {
  BeforeRet: do {
    if ((eventNode_3675552.value.repeatTimes == 0)) {
    break BeforeRet;
    }
    
    eventNode_3675552.value.level = level_3675553;
    eventNode_3675552.value.scheduleAt = scheduleAt_3675554;
    append_3665106(s_3675551.slots[chckIndx(level_3675553, 0, (s_3675551.slots).length-1)][chckIndx(scheduleAt_3675554, 0, (s_3675551.slots[chckIndx(level_3675553, 0, (s_3675551.slots).length-1)]).length-1)], eventNode_3675552);
    s_3675551.taskCounter = addInt(s_3675551.taskCounter, 1);
  } while (false);

  
}
function setTimer_3675589(s_3675592, eventNode_3675593) {
    var Tmp3;

    var levelHEX60gensym10_3680001 = 0;
    var timeoutHEX60gensym10_3680002 = subInt(eventNode_3675593.value.finishAt, s_3675592.currentTime);
    L1: do {
        L2: while (true) {
        if (!(s_3675592.duration[chckIndx(levelHEX60gensym10_3680001, 0, (s_3675592.duration).length-1)] <= timeoutHEX60gensym10_3680002)) break L2;
          levelHEX60gensym10_3680001 = ((levelHEX60gensym10_3680001 + 1) & 0xff);
          if ((4 <= levelHEX60gensym10_3680001)) {
          if (true) {
          failedAssertImpl_2535480(makeNimstrLit("timerwheel.nim(126, 16) `false` Number is too large!"));
          }
          
          }
          
        }
    } while(false);
    if ((levelHEX60gensym10_3680001 == 0)) {
    Tmp3 = {Field0: levelHEX60gensym10_3680001, Field1: (addInt(s_3675592.now[chckIndx(0, 0, (s_3675592.now).length-1)], timeoutHEX60gensym10_3680002) & 15)};
    }
    else {
    Tmp3 = {Field0: levelHEX60gensym10_3680001, Field1: (subInt(addInt(s_3675592.now[chckIndx(levelHEX60gensym10_3680001, 0, (s_3675592.now).length-1)], (timeoutHEX60gensym10_3680002 >> ((4 * levelHEX60gensym10_3680001) & 0xff))), 1) & 15)};
    }
    
    var colontmp__13090285 = nimCopy(null, Tmp3, NTI3675528);
    var level_3700216 = colontmp__13090285["Field0"];
    var scheduleAt_3700217 = colontmp__13090285["Field1"];
    setTimer_3675548(s_3675592, eventNode_3675593, level_3700216, scheduleAt_3700217);

  
}
function HEX5BHEX5D_12940094(heap_12940098, i_12940099) {
  var result_12940100 = ({finishAt: ({ticks: 0}), finishTick: 0});

    nimCopy(result_12940100, heap_12940098.data[chckIndx(i_12940099, 0, (heap_12940098.data).length-1)], NTI12931002);

  return result_12940100;

}
function HEX3C_12921719(a_12921721, b_12921722) {
  var result_12921723 = false;

    result_12921723 = (a_12921721.ticks < b_12921722.ticks);

  return result_12921723;

}
function HEX3C_12931054(x_12931056, y_12931057) {
  var result_12931058 = false;

    result_12931058 = HEX3C_12921719(x_12931056.finishAt, y_12931057.finishAt);

  return result_12931058;

}
function heapCmp_12940141(x_12940144, y_12940145) {
  var result_12940146 = false;

  BeforeRet: do {
    result_12940146 = HEX3C_12931054(x_12940144, y_12940145);
    break BeforeRet;
  } while (false);

  return result_12940146;

}
function siftdown_12940078(heap_12940083, startpos_12940084, p_12940085) {
    var pos_12940086 = p_12940085;
    var newitem_12940118 = HEX5BHEX5D_12940094(heap_12940083, chckRange(pos_12940086, 0, 2147483647));
    L1: do {
        L2: while (true) {
        if (!(startpos_12940084 < pos_12940086)) break L2;
          var parentpos_12940126 = (subInt(pos_12940086, 1) >> 1);
          var parent_12940140 = HEX5BHEX5D_12940094(heap_12940083, chckRange(parentpos_12940126, 0, 2147483647));
          if (heapCmp_12940141(newitem_12940118, parent_12940140)) {
          nimCopy(heap_12940083.data[chckIndx(pos_12940086, 0, (heap_12940083.data).length-1)], parent_12940140, NTI12931002);
          pos_12940086 = parentpos_12940126;
          }
          else {
            break L1;
          }
          
        }
    } while(false);
    nimCopy(heap_12940083.data[chckIndx(pos_12940086, 0, (heap_12940083.data).length-1)], newitem_12940118, NTI12931002);

  
}
function len_12940054(heap_12940058) {
  var result_12940059 = 0;

    result_12940059 = (heap_12940058.data).length;

  return result_12940059;

}
function push_12940008(heap_12940013, item_12940014) {
    var Tmp1 = nimCopy(null, item_12940014, NTI12931002);
    heap_12940013.data.push(Tmp1);;
    siftdown_12940078(heap_12940013, 0, subInt(len_12940054(heap_12940013), 1));

  
}
function initTimerItem_12931021(finishAt_12931023, finishTick_12931024) {
  var result_12931025 = ({finishAt: ({ticks: 0}), finishTick: 0});

    nimCopy(result_12931025, {finishAt: nimCopy(null, finishAt_12931023, NTI12921015), finishTick: nimCopy(null, finishTick_12931024, NTI2424004)}, NTI12931002);

  return result_12931025;

}
function HEX2B_12921235(a_12921237, b_12921238) {
  var result_12921239 = 0;

    result_12921239 = (a_12921237 + b_12921238);

  return result_12921239;

}
function HEX2B_11798037(a_11798039, b_11798040) {
  var result_11798041 = 0;

    result_11798041 = (a_11798039 + b_11798040);

  return result_11798041;

}
function HEX2A_11798001(a_11798003, b_11798004) {
  var result_11798005 = 0;

    result_11798005 = (a_11798003 * b_11798004);

  return result_11798005;

}
function inNanoseconds_11930245(dur_11930247) {
  var result_11930248 = 0;

    result_11930248 = HEX2B_11798037(HEX2A_11798001(dur_11930247.seconds, 1000000000), dur_11930247.nanosecond);

  return result_11930248;

}
function HEX2B_12921683(a_12921685, b_12921686) {
  var result_12921687 = ({ticks: 0});

    nimCopy(result_12921687, {ticks: HEX2B_12921235(a_12921685.ticks, inNanoseconds_11930245(b_12921686))}, NTI12921015);

  return result_12921687;

}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI2424235, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}
function convert_11825457(unitFrom_11825460, unitTo_11825461, quantity_11825462) {
    var Tmp1;

  var result_11825463 = 0;

    if ((unitFrom_11825460 < unitTo_11825461)) {
    Tmp1 = divInt(quantity_11825462, divInt(unitWeights_11798382[chckIndx(unitTo_11825461, 0, (unitWeights_11798382).length-1)], unitWeights_11798382[chckIndx(unitFrom_11825460, 0, (unitWeights_11798382).length-1)]));
    }
    else {
    Tmp1 = HEX2A_11798001(divInt(unitWeights_11798382[chckIndx(unitFrom_11825460, 0, (unitWeights_11798382).length-1)], unitWeights_11798382[chckIndx(unitTo_11825461, 0, (unitWeights_11798382).length-1)]), quantity_11825462);
    }
    
    result_11825463 = Tmp1;

  return result_11825463;

}
function convert_11825573(unitFrom_11825576, unitTo_11825577, quantity_11825578) {
    var Tmp1;

  var result_11825579 = 0;

    if ((unitFrom_11825576 < unitTo_11825577)) {
    Tmp1 = chckRange(divInt(quantity_11825578, divInt(unitWeights_11798382[chckIndx(unitTo_11825577, 0, (unitWeights_11798382).length-1)], unitWeights_11798382[chckIndx(unitFrom_11825576, 0, (unitWeights_11798382).length-1)])), -2147483648, 2147483647);
    }
    else {
    Tmp1 = chckRange(HEX2A_11798001(divInt(unitWeights_11798382[chckIndx(unitFrom_11825576, 0, (unitWeights_11798382).length-1)], unitWeights_11798382[chckIndx(unitTo_11825577, 0, (unitWeights_11798382).length-1)]), quantity_11825578), -2147483648, 2147483647);
    }
    
    result_11825579 = Tmp1;

  return result_11825579;

}
function normalize_11825560(seconds_11825563, nanoseconds_11825564) {
  var result_11825565 = ({seconds: 0, nanosecond: 0});

    result_11825565.seconds = HEX2B_11798037(seconds_11825563, convert_11825457(0, 3, nanoseconds_11825564));
    var nanosecond_11825614 = modInt(nanoseconds_11825564, convert_11825573(3, 0, 1));
    if ((nanosecond_11825614 < 0)) {
    nanosecond_11825614 = addInt(nanosecond_11825614, convert_11825573(3, 0, 1));
    result_11825565.seconds = subInt(result_11825565.seconds, 1);
    }
    
    result_11825565.nanosecond = chckRange(chckRange(nanosecond_11825614, -2147483648, 2147483647), 0, 999999999);

  return result_11825565;

}
function initDuration_11825446(nanoseconds_11825448, microseconds_11825449, milliseconds_11825450, seconds_11825451, minutes_11825452, hours_11825453, days_11825454, weeks_11825455) {
  var result_11825456 = ({seconds: 0, nanosecond: 0});

    var seconds_11825540 = HEX2B_11798037(HEX2B_11798037(HEX2B_11798037(HEX2B_11798037(HEX2B_11798037(HEX2B_11798037(HEX2B_11798037(convert_11825457(7, 3, weeks_11825455), convert_11825457(6, 3, days_11825454)), convert_11825457(4, 3, minutes_11825452)), convert_11825457(5, 3, hours_11825453)), convert_11825457(3, 3, seconds_11825451)), convert_11825457(2, 3, milliseconds_11825450)), convert_11825457(1, 3, microseconds_11825449)), convert_11825457(0, 3, nanoseconds_11825448));
    var nanoseconds_11825556 = chckRange(HEX2B_11798037(HEX2B_11798037(convert_11825457(2, 0, modInt(milliseconds_11825450, 1000)), convert_11825457(1, 0, modInt(microseconds_11825449, 1000000))), modInt(nanoseconds_11825448, 1000000000)), -2147483648, 2147483647);
    nimCopy(result_11825456, normalize_11825560(seconds_11825540, nanoseconds_11825556), NTI11798243);

  return result_11825456;

}
function add_12931139(timer_12931142, event_12931143) {
      var Tmp1;

    if (!((event_12931143 == null))) {
    setTimer_3675589(timer_12931142.wheel, event_12931143);
    var count_12935010 = timer_12931142.wheel.slots[chckIndx(event_12931143.value.level, 0, (timer_12931142.wheel.slots).length-1)][chckIndx(event_12931143.value.scheduleAt, 0, (timer_12931142.wheel.slots[chckIndx(event_12931143.value.level, 0, (timer_12931142.wheel.slots).length-1)]).length-1)].count;
      if (!!((event_12931143.value.repeatTimes == 0))) Tmp1 = false; else {        Tmp1 = (count_12935010 == 1);      }    if (Tmp1) {
    push_12940008(timer_12931142.queue, initTimerItem_12931021(HEX2B_12921683(getMonoTime_12921414(), initDuration_11825446(0, 0, mulInt(subInt(event_12931143.value.finishAt, timer_12931142.wheel.currentTime), timer_12931142.interval), 0, 0, 0, 0, 0)), event_12931143.value.finishAt));
    }
    
    }
    

  
}
function add_12940204(timer_12940207, event_12940209, timeout_12940210, repeatTimes_12940211) {
  var result_12940212 = null;

    event_12940209.repeatTimes = repeatTimes_12940211;
    event_12940209.finishAt = chckRange(addInt(timer_12940207.wheel.currentTime, timeout_12940210), 0, 2147483647);
    event_12940209.timeout = timeout_12940210;
    result_12940212 = newDoublyLinkedNode_3705001(event_12940209);
    add_12931139(timer_12940207, result_12940212);

  return result_12940212;

}
function normalize_11995002(seconds_11995005, nanoseconds_11995006) {
  var result_11995007 = ({seconds: 0, nanosecond: 0});

    result_11995007.seconds = HEX2B_11798037(seconds_11995005, convert_11825457(0, 3, nanoseconds_11995006));
    var nanosecond_11995021 = modInt(nanoseconds_11995006, convert_11825573(3, 0, 1));
    if ((nanosecond_11995021 < 0)) {
    nanosecond_11995021 = addInt(nanosecond_11995021, convert_11825573(3, 0, 1));
    result_11995007.seconds = subInt(result_11995007.seconds, 1);
    }
    
    result_11995007.nanosecond = chckRange(chckRange(nanosecond_11995021, -2147483648, 2147483647), 0, 999999999);

  return result_11995007;

}
function HEX2D_11798073(a_11798075, b_11798076) {
  var result_11798077 = 0;

    result_11798077 = (a_11798075 - b_11798076);

  return result_11798077;

}
function HEX2D_11798091(a_11798093, b_11798094) {
  var result_11798095 = 0;

    result_11798095 = (a_11798093 - b_11798094);

  return result_11798095;

}
function ntSubTime(a_11995069, b_11995070) {
  var result_11995071 = ({seconds: 0, nanosecond: 0});

    nimCopy(result_11995071, normalize_11995002(HEX2D_11798073(a_11995069.seconds, b_11995070.seconds), HEX2D_11798091(a_11995069.nanosecond, b_11995070.nanosecond)), NTI11798239);

  return result_11995071;

}
function floorDiv_11825158(x_11825161, y_11825162) {
      var Tmp1;
      var Tmp2;
        var Tmp3;

  var result_11825163 = 0;

    result_11825163 = Math.trunc(x_11825161 / y_11825162);
    var r_11825164 = Math.trunc(x_11825161 % y_11825162);
      if (!(0 < r_11825164)) Tmp2 = false; else {        Tmp2 = (y_11825162 < 0);      }      if (Tmp2) Tmp1 = true; else {        if (!(r_11825164 < 0)) Tmp3 = false; else {          Tmp3 = (0 < y_11825162);        }        Tmp1 = Tmp3;      }    if (Tmp1) {
    result_11825163 -= 1;
    }
    

  return result_11825163;

}
function inc_11798133(a_11798136, a_11798136_Idx, b_11798137) {
    a_11798136[a_11798136_Idx] += b_11798137;

  
}
function fromEpochDay_11820036(epochday_11820038) {
    var Tmp1;
    var Tmp2;

  var result_11820043 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: do {
    var z_11820044 = [epochday_11820038];
    inc_11798133(z_11820044, 0, 719468);
    if ((0 <= z_11820044[0])) {
    Tmp1 = z_11820044[0];
    }
    else {
    Tmp1 = HEX2D_11798073(z_11820044[0], 146096);
    }
    
    var era_11825003 = divInt(Tmp1, 146097);
    var doe_11825005 = HEX2D_11798073(z_11820044[0], HEX2A_11798001(era_11825003, 146097));
    var yoe_11825010 = divInt(HEX2D_11798073(HEX2B_11798037(HEX2D_11798073(doe_11825005, divInt(doe_11825005, 1460)), divInt(doe_11825005, 36524)), divInt(doe_11825005, 146096)), 365);
    var y_11825012 = HEX2B_11798037(yoe_11825010, HEX2A_11798001(era_11825003, 400));
    var doy_11825015 = HEX2D_11798073(doe_11825005, HEX2D_11798073(HEX2B_11798037(HEX2A_11798001(365, yoe_11825010), divInt(yoe_11825010, 4)), divInt(yoe_11825010, 100)));
    var mp_11825017 = divInt(HEX2B_11798037(HEX2A_11798001(5, doy_11825015), 2), 153);
    var d_11825019 = HEX2B_11798037(HEX2D_11798073(doy_11825015, divInt(HEX2B_11798037(HEX2A_11798001(153, mp_11825017), 2), 5)), 1);
    if ((mp_11825017 < 10)) {
    Tmp2 = 3;
    }
    else {
    Tmp2 = -9;
    }
    
    var m_11825021 = HEX2B_11798037(mp_11825017, Tmp2);
    var colontmp__13090298 = chckRange(d_11825019, 1, 31);
    var colontmp__13090299 = chckRange(m_11825021, 1, 12);
    var colontmp__13090300 = chckRange(HEX2B_11798037(y_11825012, ((m_11825021 <= 2) ? 1:0)), -2147483648, 2147483647);
    nimCopy(result_11820043, {Field0: nimCopy(null, colontmp__13090298, NTI11798227), Field1: colontmp__13090299, Field2: colontmp__13090300}, NTI11820039);
    break BeforeRet;
  } while (false);

  return result_11820043;

}
function isLeapYear_11798443(year_11798445) {
    var Tmp1;
      var Tmp2;

  var result_11798446 = false;

    if (!(modInt(year_11798445, 4) == 0)) Tmp1 = false; else {      if (!((modInt(year_11798445, 100) == 0))) Tmp2 = true; else {        Tmp2 = (modInt(year_11798445, 400) == 0);      }      Tmp1 = Tmp2;    }    result_11798446 = Tmp1;

  return result_11798446;

}
function getDaysInMonth_11800016(month_11800018, year_11800019) {
      var Tmp1;

  var result_11800020 = 0;

    switch (month_11800018) {
    case 2:
      if (isLeapYear_11798443(year_11800019)) {
      Tmp1 = 29;
      }
      else {
      Tmp1 = 28;
      }
      
      result_11800020 = Tmp1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_11800020 = 30;
      break;
    default: 
      result_11800020 = 31;
      break;
    }

  return result_11800020;

}
function nsuIntToStr(x_11170392, minchars_11170393) {
  var result_11170394 = [];

    result_11170394 = nimCopy(null, cstrToNimstr((absInt(x_11170392))+""), NTI2418015);
    L1: do {
      var i_11170403 = 0;
      var colontmp__13090302 = 0;
      colontmp__13090302 = subInt(minchars_11170393, (result_11170394).length);
      var res_13090303 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_13090303 <= colontmp__13090302)) break L3;
            i_11170403 = res_13090303;
            result_11170394 = nimCopy(null, [48].concat(result_11170394 || []), NTI2418015);
            res_13090303 = addInt(res_13090303, 1);
          }
      } while(false);
    } while(false);
    if ((x_11170392 < 0)) {
    result_11170394 = nimCopy(null, [45].concat(result_11170394 || []), NTI2418015);
    }
    

  return result_11170394;

}
function assertValidDate_11800034(monthday_11800036, month_11800037, year_11800038) {
    if (!((monthday_11800036 <= getDaysInMonth_11800016(month_11800037, year_11800038)))) {
    failedAssertImpl_2535480((makeNimstrLit("times.nim(443, 10) `monthday <= getDaysInMonth(month, year)` ") || []).concat(cstrToNimstr((year_11800038)+"") || [],makeNimstrLit("-") || [],nsuIntToStr(month_11800037, 2) || [],makeNimstrLit("-") || [],cstrToNimstr((monthday_11800036)+"") || [],makeNimstrLit(" is not a valid date") || []));
    }
    

  
}
function HEX2A_11798019(a_11798021, b_11798022) {
  var result_11798023 = 0;

    result_11798023 = (a_11798021 * b_11798022);

  return result_11798023;

}
function HEX2B_11798055(a_11798057, b_11798058) {
  var result_11798059 = 0;

    result_11798059 = (a_11798057 + b_11798058);

  return result_11798059;

}
function toEpochDay_11810229(monthday_11810231, month_11810232, year_11810233) {
    var Tmp1;
    var Tmp2;

  var result_11810234 = 0;

  BeforeRet: do {
    assertValidDate_11800034(monthday_11810231, month_11810232, year_11810233);
    var colontmp__13090309 = {Field0: year_11810233, Field1: month_11810232, Field2: monthday_11810231};
    var y_11810240 = colontmp__13090309["Field0"];
    var m_11810241 = colontmp__13090309["Field1"];
    var d_11810242 = colontmp__13090309["Field2"];
    if ((m_11810241 <= 2)) {
    y_11810240 = subInt(y_11810240, 1);
    }
    
    if ((0 <= y_11810240)) {
    Tmp1 = y_11810240;
    }
    else {
    Tmp1 = HEX2D_11798091(y_11810240, 399);
    }
    
    var era_11815003 = divInt(Tmp1, 400);
    var yoe_11815005 = HEX2D_11798091(y_11810240, HEX2A_11798019(era_11815003, 400));
    if ((2 < m_11810241)) {
    Tmp2 = -3;
    }
    else {
    Tmp2 = 9;
    }
    
    var doy_11820002 = HEX2D_11798091(HEX2B_11798055(divInt(HEX2B_11798055(HEX2A_11798019(153, HEX2B_11798055(m_11810241, Tmp2)), 2), 5), d_11810242), 1);
    var doe_11820005 = HEX2B_11798055(HEX2D_11798091(HEX2B_11798055(HEX2A_11798019(yoe_11815005, 365), divInt(yoe_11815005, 4)), divInt(yoe_11815005, 100)), doy_11820002);
    result_11810234 = HEX2D_11798091(HEX2B_11798055(HEX2A_11798019(era_11815003, 146097), doe_11820005), 719468);
    break BeforeRet;
  } while (false);

  return result_11810234;

}
function getDayOfWeek_11825151(monthday_11825153, month_11825154, year_11825155) {
    var Tmp1;

  var result_11825156 = 0;

    assertValidDate_11800034(monthday_11825153, month_11825154, year_11825155);
    var days_11825157 = HEX2D_11798073(toEpochDay_11810229(monthday_11825153, month_11825154, year_11825155), 3);
    var weeks_11825184 = floorDiv_11825158(days_11825157, 7);
    var wd_11825185 = HEX2D_11798073(days_11825157, HEX2A_11798001(weeks_11825184, 7));
    if ((wd_11825185 == 0)) {
    Tmp1 = 6;
    }
    else {
    Tmp1 = chckRange(HEX2D_11798073(wd_11825185, 1), 0, 6);
    }
    
    result_11825156 = Tmp1;

  return result_11825156;

}
function getDayOfYear_11825070(monthday_11825072, month_11825073, year_11825074) {
  var result_11825075 = 0;

    assertValidDate_11800034(monthday_11825072, month_11825073, year_11825074);
    if (isLeapYear_11798443(year_11825074)) {
    result_11825075 = chckRange(HEX2D_11798091(HEX2B_11798055(daysUntilMonthLeap_11825107[chckIndx(month_11825073, 1, (daysUntilMonthLeap_11825107).length+(1)-1)-(1)], monthday_11825072), 1), 0, 365);
    }
    else {
      result_11825075 = chckRange(HEX2D_11798091(HEX2B_11798055(daysUntilMonth_11825091[chckIndx(month_11825073, 1, (daysUntilMonth_11825091).length+(1)-1)-(1)], monthday_11825072), 1), 0, 365);
    }
    

  return result_11825075;

}
function initDateTime_12320220(zt_12320222, zone_12320223) {
  var result_12320224 = ({m_type: NTI11798241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_12320225 = ntSubTime(zt_12320222.time, initDuration_11825446(0, 0, 0, zt_12320222.utcOffset, 0, 0, 0, 0));
    var s_12320226 = adjTime_12320225.seconds;
    var epochday_12320232 = floorDiv_11825158(s_12320226, 86400);
    var rem_12320233 = HEX2D_11798073(s_12320226, HEX2A_11798001(epochday_12320232, 86400));
    var hour_12320234 = divInt(rem_12320233, 3600);
    rem_12320233 = HEX2D_11798073(rem_12320233, HEX2A_11798001(hour_12320234, 3600));
    var minute_12320235 = divInt(rem_12320233, 60);
    rem_12320233 = HEX2D_11798073(rem_12320233, HEX2A_11798001(minute_12320235, 60));
    var second_12320236 = rem_12320233;
    var colontmp__13090297 = fromEpochDay_11820036(epochday_12320232);
    var d_12320237 = colontmp__13090297["Field0"];
    var m_12320238 = colontmp__13090297["Field1"];
    var y_12320239 = colontmp__13090297["Field2"];
    nimCopy(result_12320224, {year: y_12320239, monthZero: ((m_12320238)|0), monthdayZero: d_12320237, hour: nimCopy(null, chckRange(hour_12320234, 0, 23), NTI11798229), minute: nimCopy(null, chckRange(minute_12320235, 0, 59), NTI11798231), second: nimCopy(null, chckRange(second_12320236, 0, 60), NTI11798233), nanosecond: nimCopy(null, zt_12320222.time.nanosecond, NTI11798237), weekday: getDayOfWeek_11825151(d_12320237, m_12320238, y_12320239), yearday: getDayOfYear_11825070(d_12320237, m_12320238, y_12320239), isDst: zt_12320222.isDst, timezone: zone_12320223, utcOffset: zt_12320222.utcOffset, m_type: NTI11798241}, NTI11798241);

  return result_12320224;

}
function zonedTimeFromTime_12320341(zone_12320343, time_12320344) {
  var result_12320345 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    nimCopy(result_12320345, zone_12320343.zonedTimeFromTimeImpl(time_12320344), NTI11798253);

  return result_12320345;

}
function inZone_12325059(time_12325061, zone_12325062) {
  var result_12325063 = ({m_type: NTI11798241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    nimCopy(result_12325063, initDateTime_12320220(zonedTimeFromTime_12320341(zone_12325062, time_12325061), zone_12325062), NTI11798241);

  return result_12325063;

}
function ntAddTime(a_11990022, b_11990023) {
  var result_11990024 = ({seconds: 0, nanosecond: 0});

    nimCopy(result_11990024, normalize_11995002(HEX2B_11798037(a_11990022.seconds, b_11990023.seconds), HEX2B_11798055(a_11990022.nanosecond, b_11990023.nanosecond)), NTI11798239);

  return result_11990024;

}
function monthday_12095229(dt_12095231) {
  var result_12095232 = 0;

    if (!(!((dt_12095231.monthdayZero == 0)))) {
    failedAssertImpl_2535480(makeNimstrLit("times.nim(989, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_12095232 = dt_12095231.monthdayZero;

  return result_12095232;

}
function month_12115214(dt_12115216) {
  var result_12115217 = 0;

    if (!(!((dt_12115216.monthdayZero == 0)))) {
    failedAssertImpl_2535480(makeNimstrLit("times.nim(996, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_12115217 = dt_12115216.monthZero;

  return result_12115217;

}
function initTime_11975182(unix_11975184, nanosecond_11975185) {
  var result_11975186 = ({seconds: 0, nanosecond: 0});

    result_11975186.seconds = unix_11975184;
    result_11975186.nanosecond = nanosecond_11975185;

  return result_11975186;

}
function toTime_12300414(dt_12300416) {
  var result_12300417 = ({seconds: 0, nanosecond: 0});

    if (!(!((dt_12300416.monthdayZero == 0)))) {
    failedAssertImpl_2535480(makeNimstrLit("times.nim(1067, 29) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    var epochDay_12320201 = toEpochDay_11810229(monthday_12095229(dt_12300416), month_12115214(dt_12300416), dt_12300416.year);
    var seconds_12320202 = [HEX2A_11798001(epochDay_12320201, 86400)];
    inc_11798133(seconds_12320202, 0, HEX2A_11798019(dt_12300416.hour, 3600));
    inc_11798133(seconds_12320202, 0, HEX2A_11798019(dt_12300416.minute, 60));
    inc_11798133(seconds_12320202, 0, dt_12300416.second);
    inc_11798133(seconds_12320202, 0, dt_12300416.utcOffset);
    nimCopy(result_12300417, initTime_11975182(seconds_12320202[0], dt_12300416.nanosecond), NTI11798239);

  return result_12300417;

}
function HEX2B_12350435(dt_12350437, dur_12350438) {
  var result_12350439 = ({m_type: NTI11798241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    nimCopy(result_12350439, inZone_12325059(ntAddTime(toTime_12300414(dt_12350437), dur_12350438), dt_12350437.timezone), NTI11798241);

  return result_12350439;

}
function newTimezone_12320268(name_12320270, zonedTimeFromTimeImpl_12320274, zonedTimeFromAdjTimeImpl_12320278) {
  var result_12320280 = null;

    result_12320280 = {name: nimCopy(null, name_12320270, NTI2418015), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_12320274, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_12320278};

  return result_12320280;

}
function localZonedTimeFromTime_12345236(time_12345238) {
  var result_12345239 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_12345245 = new Date(HEX2A_11798001(time_12345238.seconds, 1000));
    var offset_12345246 = HEX2A_11798019(jsDate_12345245.getTimezoneOffset(), 60);
    nimCopy(result_12345239.time, time_12345238, NTI11798239);
    result_12345239.utcOffset = offset_12345246;
    result_12345239.isDst = false;

  return result_12345239;

}
function contains_12350021(s_12350027, value_12350028) {
  var result_12350029 = false;

    result_12350029 = ((s_12350027.a <= value_12350028) && (value_12350028 <= s_12350027.b));

  return result_12350029;

}
function HEX2EHEX2E_4850220(a_4850225, b_4850227) {
  var result_4850229 = ({a: 0, b: 0});

    nimCopy(result_4850229, {a: a_4850225, b: b_4850227}, NTI3410020);

  return result_4850229;

}
function localZonedTimeFromAdjTime_12345260(adjTime_12345262) {
  var result_12345263 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_12345269 = new Date(HEX2A_11798001(adjTime_12345262.seconds, 1000));
    var localDate_12345270 = new Date(utcDate_12345269.getUTCFullYear(),utcDate_12345269.getUTCMonth(),utcDate_12345269.getUTCDate(),utcDate_12345269.getUTCHours(),utcDate_12345269.getUTCMinutes(),utcDate_12345269.getUTCSeconds(),0);
    if (contains_12350021(HEX2EHEX2E_4850220(0, 99), utcDate_12345269.getUTCFullYear())) {
    localDate_12345270.setFullYear(utcDate_12345269.getUTCFullYear());
    }
    
    result_12345263.utcOffset = HEX2A_11798019(localDate_12345270.getTimezoneOffset(), 60);
    nimCopy(result_12345263.time, ntAddTime(adjTime_12345262, initDuration_11825446(0, 0, 0, result_12345263.utcOffset, 0, 0, 0, 0)), NTI11798239);
    result_12345263.isDst = false;

  return result_12345263;

}
function local_12350282() {
  var result_12350284 = null;

    if ((localInstance_12350232[0] == null)) {
    localInstance_12350232[0] = newTimezone_12320268(makeNimstrLit("LOCAL"), localZonedTimeFromTime_12345236, localZonedTimeFromAdjTime_12345260);
    }
    
    result_12350284 = localInstance_12350232[0];

  return result_12350284;

}
function local_12350354(t_12350356) {
  var result_12350357 = ({m_type: NTI11798241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    nimCopy(result_12350357, inZone_12325059(t_12350356, local_12350282()), NTI11798241);

  return result_12350357;

}
function getTime_11985291() {
  var result_11985293 = ({seconds: 0, nanosecond: 0});

    var millis_11985401 = new Date().getTime();
    var seconds_11985408 = convert_11825573(2, 3, millis_11985401);
    var nanos_11985422 = convert_11825573(2, 0, modInt(millis_11985401, convert_11825573(3, 2, 1)));
    nimCopy(result_11985293, initTime_11975182(seconds_11985408, chckRange(nanos_11985422, 0, 999999999)), NTI11798239);

  return result_11985293;

}
function now_12350371() {
  var result_12350373 = ({m_type: NTI11798241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    nimCopy(result_12350373, local_12350354(getTime_11985291()), NTI11798241);

  return result_12350373;

}
function ntLtTime(a_12000022, b_12000023) {
    var Tmp1;
      var Tmp2;

  var result_12000024 = false;

    if ((a_12000022.seconds < b_12000023.seconds)) Tmp1 = true; else {      if (!(a_12000022.seconds == b_12000023.seconds)) Tmp2 = false; else {        Tmp2 = (a_12000022.nanosecond < b_12000023.nanosecond);      }      Tmp1 = Tmp2;    }    result_12000024 = Tmp1;

  return result_12000024;

}
function HEX3C_12350489(a_12350491, b_12350492) {
  var result_12350493 = false;

  BeforeRet: do {
    result_12350493 = ntLtTime(toTime_12300414(a_12350491), toTime_12300414(b_12350492));
    break BeforeRet;
  } while (false);

  return result_12350493;

}
function HEX3CHEX3D_12921737(a_12921739, b_12921740) {
  var result_12921741 = false;

    result_12921741 = (a_12921739.ticks <= b_12921740.ticks);

  return result_12921741;

}
function pop_12975028(s_12975033, s_12975033_Idx) {
  var result_12975034 = ({finishAt: ({ticks: 0}), finishTick: 0});

    var L_12975040 = subInt((s_12975033[s_12975033_Idx]).length, 1);
    nimCopy(result_12975034, s_12975033[s_12975033_Idx][chckIndx(L_12975040, 0, (s_12975033[s_12975033_Idx]).length-1)], NTI12931002);
    if (s_12975033[s_12975033_Idx].length < chckRange(L_12975040, 0, 2147483647)) { for (var i=s_12975033[s_12975033_Idx].length;i<chckRange(L_12975040, 0, 2147483647);++i) s_12975033[s_12975033_Idx].push(({finishAt: ({ticks: 0}), finishTick: 0})); }
               else { s_12975033[s_12975033_Idx].length = chckRange(L_12975040, 0, 2147483647); };

  return result_12975034;

}
function siftup_12975274(heap_12975279, p_12975280) {
            var Tmp3;

    var endpos_12975310 = len_12940054(heap_12975279);
    var pos_12975311 = p_12975280;
    var startpos_12975312 = pos_12975311;
    var newitem_12975326 = HEX5BHEX5D_12940094(heap_12975279, chckRange(pos_12975311, 0, 2147483647));
    var childpos_12975327 = addInt(mulInt(2, pos_12975311), 1);
    L1: do {
        L2: while (true) {
        if (!(childpos_12975327 < endpos_12975310)) break L2;
          var rightpos_12975328 = addInt(childpos_12975327, 1);
            if (!(rightpos_12975328 < endpos_12975310)) Tmp3 = false; else {              Tmp3 = !(heapCmp_12940141(HEX5BHEX5D_12940094(heap_12975279, chckRange(childpos_12975327, 0, 2147483647)), HEX5BHEX5D_12940094(heap_12975279, chckRange(rightpos_12975328, 0, 2147483647))));            }          if (Tmp3) {
          childpos_12975327 = rightpos_12975328;
          }
          
          nimCopy(heap_12975279.data[chckIndx(pos_12975311, 0, (heap_12975279.data).length-1)], HEX5BHEX5D_12940094(heap_12975279, chckRange(childpos_12975327, 0, 2147483647)), NTI12931002);
          pos_12975311 = childpos_12975327;
          childpos_12975327 = addInt(mulInt(2, pos_12975311), 1);
        }
    } while(false);
    nimCopy(heap_12975279.data[chckIndx(pos_12975311, 0, (heap_12975279.data).length-1)], newitem_12975326, NTI12931002);
    siftdown_12940078(heap_12975279, startpos_12975312, pos_12975311);

  
}
function pop_12975021(heap_12975026) {
  var result_12975027 = ({finishAt: ({ticks: 0}), finishTick: 0});

    var lastelt_12975222 = pop_12975028(heap_12975026, "data");
    if ((0 < len_12940054(heap_12975026))) {
    nimCopy(result_12975027, HEX5BHEX5D_12940094(heap_12975026, 0), NTI12931002);
    nimCopy(heap_12975026.data[chckIndx(0, 0, (heap_12975026.data).length-1)], lastelt_12975222, NTI12931002);
    siftup_12975274(heap_12975026, 0);
    }
    else {
      nimCopy(result_12975027, lastelt_12975222, NTI12931002);
    }
    

  return result_12975027;

}
function internalRemove_3675303(L_3675308, n_3675310) {
  var result_3675311 = false;

    result_3675311 = false;
    if ((n_3675310 == L_3675308.tail)) {
    L_3675308.tail = n_3675310.prev;
    result_3675311 = true;
    }
    
    if ((n_3675310 == L_3675308.head)) {
    L_3675308.head = n_3675310.next;
    result_3675311 = true;
    }
    
    if (!((n_3675310.next == null))) {
    n_3675310.next.prev = n_3675310.prev;
    result_3675311 = true;
    }
    
    if (!((n_3675310.prev == null))) {
    n_3675310.prev.next = n_3675310.next;
    result_3675311 = true;
    }
    

  return result_3675311;

}
function remove_3675255(L_3675257, ev_3675258) {
  var result_3675259 = false;

    result_3675259 = internalRemove_3675303(L_3675257.data, ev_3675258);
    if (result_3675259) {
    L_3675257.count = subInt(L_3675257.count, 1);
    }
    

  return result_3675259;

}
function execute_3705066(s_3705069, t_3705070) {
    if (!((t_3705070.value.cb == null))) {
    t_3705070.value.cb(t_3705070.value.userData[0], t_3705070.value.userData[1]);
    if ((t_3705070.value.repeatTimes < 0)) {
    t_3705070.value.finishAt = chckRange(addInt(s_3705069.currentTime, t_3705070.value.timeout), 0, 2147483647);
    setTimer_3675589(s_3705069, t_3705070);
    }
    else {
    if ((1 <= t_3705070.value.repeatTimes)) {
    t_3705070.value.repeatTimes = subInt(t_3705070.value.repeatTimes, 1);
    t_3705070.value.finishAt = chckRange(addInt(s_3705069.currentTime, t_3705070.value.timeout), 0, 2147483647);
    setTimer_3675589(s_3705069, t_3705070);
    }
    }
    }
    

  
}
function setDegradeTimer_3725014(s_3725017, eventNode_3725018) {
    var Tmp3;

    var levelHEX60gensym20_3730001 = 0;
    var timeoutHEX60gensym20_3730002 = subInt(eventNode_3725018.value.finishAt, s_3725017.currentTime);
    L1: do {
        L2: while (true) {
        if (!(s_3725017.duration[chckIndx(levelHEX60gensym20_3730001, 0, (s_3725017.duration).length-1)] <= timeoutHEX60gensym20_3730002)) break L2;
          levelHEX60gensym20_3730001 = ((levelHEX60gensym20_3730001 + 1) & 0xff);
          if ((4 <= levelHEX60gensym20_3730001)) {
          if (true) {
          failedAssertImpl_2535480(makeNimstrLit("timerwheel.nim(126, 16) `false` Number is too large!"));
          }
          
          }
          
        }
    } while(false);
    if ((levelHEX60gensym20_3730001 == 0)) {
    Tmp3 = {Field0: levelHEX60gensym20_3730001, Field1: (addInt(s_3725017.now[chckIndx(0, 0, (s_3725017.now).length-1)], timeoutHEX60gensym20_3730002) & 15)};
    }
    else {
    Tmp3 = {Field0: levelHEX60gensym20_3730001, Field1: (subInt(addInt(s_3725017.now[chckIndx(levelHEX60gensym20_3730001, 0, (s_3725017.now).length-1)], (timeoutHEX60gensym20_3730002 >> ((4 * levelHEX60gensym20_3730001) & 0xff))), 1) & 15)};
    }
    
    var colontmp__13090343 = nimCopy(null, Tmp3, NTI3675528);
    var level_3750216 = colontmp__13090343["Field0"];
    var scheduleAt_3750217 = colontmp__13090343["Field1"];
    setTimer_3675548(s_3725017, eventNode_3725018, level_3750216, scheduleAt_3750217);

  
}
function degrade_3750231(s_3750234, hlevel_3750235) {
    var Tmp1;

    var idx_3750236 = s_3750234.now[chckIndx(hlevel_3750235, 0, (s_3750234.now).length-1)];
    Tmp1 = s_3750234.slots[chckIndx(hlevel_3750235, 0, (s_3750234.slots).length-1)][chckIndx(idx_3750236, 0, (s_3750234.slots[chckIndx(hlevel_3750235, 0, (s_3750234.slots).length-1)]).length-1)];
    s_3750234.slots[chckIndx(hlevel_3750235, 0, (s_3750234.slots).length-1)][chckIndx(idx_3750236, 0, (s_3750234.slots[chckIndx(hlevel_3750235, 0, (s_3750234.slots).length-1)]).length-1)] = genericReset(s_3750234.slots[chckIndx(hlevel_3750235, 0, (s_3750234.slots).length-1)][chckIndx(idx_3750236, 0, (s_3750234.slots[chckIndx(hlevel_3750235, 0, (s_3750234.slots).length-1)]).length-1)], NTI3655210);
    var nodes_3750274 = Tmp1;
    s_3750234.slots[chckIndx(hlevel_3750235, 0, (s_3750234.slots).length-1)][chckIndx(idx_3750236, 0, (s_3750234.slots[chckIndx(hlevel_3750235, 0, (s_3750234.slots).length-1)]).length-1)] = ({data: ({head: null, tail: null}), count: 0});
    s_3750234.now[chckIndx(hlevel_3750235, 0, (s_3750234.now).length-1)] = chckRange((addInt(s_3750234.now[chckIndx(hlevel_3750235, 0, (s_3750234.now).length-1)], 1) & 15), 0, 2147483647);
    L2: do {
      var node_3750281 = null;
      L3: do {
        var item_13090338 = null;
        var it_13090339 = nodes_3750274.data.head;
        L4: do {
            L5: while (true) {
            if (!!((it_13090339 == null))) break L5;
              var nxt_13090341 = it_13090339.next;
              item_13090338 = it_13090339;
              node_3750281 = item_13090338;
              remove_3675255(nodes_3750274, node_3750281);
              if ((node_3750281.value.finishAt <= s_3750234.currentTime)) {
              execute_3705066(s_3750234, node_3750281);
              }
              else {
              setDegradeTimer_3725014(s_3750234, node_3750281);
              }
              
              s_3750234.taskCounter = subInt(s_3750234.taskCounter, 1);
              it_13090339 = nxt_13090341;
            }
        } while(false);
      } while(false);
    } while(false);

  
}
function execute_12945038(s_12945041, t_12945042) {
    if (!((t_12945042.value.cb == null))) {
    t_12945042.value.cb(t_12945042.value.userData[0], t_12945042.value.userData[1]);
    if ((t_12945042.value.repeatTimes < 0)) {
    t_12945042.value.finishAt = chckRange(addInt(s_12945041.wheel.currentTime, t_12945042.value.timeout), 0, 2147483647);
    add_12931139(s_12945041, t_12945042);
    }
    else {
    if ((1 <= t_12945042.value.repeatTimes)) {
    t_12945042.value.repeatTimes = subInt(t_12945042.value.repeatTimes, 1);
    t_12945042.value.finishAt = chckRange(addInt(s_12945041.wheel.currentTime, t_12945042.value.timeout), 0, 2147483647);
    add_12931139(s_12945041, t_12945042);
    }
    }
    }
    

  
}
function clear_3665090(L_3665092) {
    L_3665092.data.head = null;
    L_3665092.data.tail = null;
    L_3665092.count = 0;

  
}
function update_12965014(s_12965017, step_12965018) {
                  var Tmp6;

    L1: do {
      var iHEX60gensym7_12970008 = 0;
      var colontmp__13090321 = 0;
      colontmp__13090321 = step_12965018;
      var i_13090322 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_13090322 < colontmp__13090321)) break L3;
            iHEX60gensym7_12970008 = i_13090322;
            s_12965017.wheel.now[chckIndx(0, 0, (s_12965017.wheel.now).length-1)] = chckRange((addInt(s_12965017.wheel.now[chckIndx(0, 0, (s_12965017.wheel.now).length-1)], 1) & 15), 0, 2147483647);
            s_12965017.wheel.currentTime = chckRange((addInt(s_12965017.wheel.currentTime, 1) & 65535), 0, 2147483647);
            var hlevelHEX60gensym7_12970203 = 0;
            L4: do {
                L5: while (true) {
                  if (!(s_12965017.wheel.now[chckIndx(hlevelHEX60gensym7_12970203, 0, (s_12965017.wheel.now).length-1)] == 0)) Tmp6 = false; else {                    Tmp6 = (hlevelHEX60gensym7_12970203 < 3);                  }                if (!Tmp6) break L5;
                  hlevelHEX60gensym7_12970203 = addInt(hlevelHEX60gensym7_12970203, 1);
                  degrade_3750231(s_12965017.wheel, chckRange(hlevelHEX60gensym7_12970203, 0, 2147483647));
                }
            } while(false);
            i_13090322 = addInt(i_13090322, 1);
          }
      } while(false);
    } while(false);
    var idx_12970401 = s_12965017.wheel.now[chckIndx(0, 0, (s_12965017.wheel.now).length-1)];
    L7: do {
      var node_12970402 = null;
      var colontmp__13090325 = null;
      colontmp__13090325 = s_12965017.wheel.slots[chckIndx(0, 0, (s_12965017.wheel.slots).length-1)][chckIndx(idx_12970401, 0, (s_12965017.wheel.slots[chckIndx(0, 0, (s_12965017.wheel.slots).length-1)]).length-1)];
      L8: do {
        var item_13090332 = null;
        var it_13090333 = colontmp__13090325.data.head;
        L9: do {
            L10: while (true) {
            if (!!((it_13090333 == null))) break L10;
              var nxt_13090335 = it_13090333.next;
              item_13090332 = it_13090333;
              node_12970402 = item_13090332;
              execute_12945038(s_12965017, node_12970402);
              s_12965017.wheel.taskCounter = subInt(s_12965017.wheel.taskCounter, 1);
              it_13090333 = nxt_13090335;
            }
        } while(false);
      } while(false);
    } while(false);
    clear_3665090(s_12965017.wheel.slots[chckIndx(0, 0, (s_12965017.wheel.slots).length-1)][chckIndx(idx_12970401, 0, (s_12965017.wheel.slots[chckIndx(0, 0, (s_12965017.wheel.slots).length-1)]).length-1)]);

  
}
function none_12980038() {
  var result_12980056 = ({val: 0, has: false});

  return result_12980056;

}
function convert_11915226(unitFrom_11915229, unitTo_11915230, quantity_11915231) {
    var Tmp1;

  var result_11915232 = 0;

    if ((unitFrom_11915229 < unitTo_11915230)) {
    Tmp1 = chckRange(divInt(quantity_11915231, divInt(unitWeights_11798382[chckIndx(unitTo_11915230, 0, (unitWeights_11798382).length-1)], unitWeights_11798382[chckIndx(unitFrom_11915229, 0, (unitWeights_11798382).length-1)])), 0, 999999999);
    }
    else {
    Tmp1 = chckRange(HEX2A_11798001(divInt(unitWeights_11798382[chckIndx(unitFrom_11915229, 0, (unitWeights_11798382).length-1)], unitWeights_11798382[chckIndx(unitTo_11915230, 0, (unitWeights_11798382).length-1)]), quantity_11915231), 0, 999999999);
    }
    
    result_11915232 = Tmp1;

  return result_11915232;

}
function inMilliseconds_11900224(dur_11900226) {
    var Tmp1;
    var Tmp2;

  var result_11900227 = 0;

    if (!(dur_11900226.seconds < 0)) Tmp1 = false; else {      Tmp1 = (0 < dur_11900226.nanosecond);    }    var correctionHEX60gensym23_11910001 = Tmp1;
    if (correctionHEX60gensym23_11910001) {
    Tmp2 = HEX2D_11798073(convert_11825457(3, 2, HEX2B_11798037(dur_11900226.seconds, 1)), convert_11825573(0, 2, HEX2D_11798091(convert_11825573(3, 0, 1), dur_11900226.nanosecond)));
    }
    else {
    Tmp2 = HEX2B_11798037(convert_11825457(3, 2, dur_11900226.seconds), convert_11915226(0, 2, dur_11900226.nanosecond));
    }
    
    result_11900227 = Tmp2;

  return result_11900227;

}
function HEX2D_12921217(a_12921219, b_12921220) {
  var result_12921221 = 0;

    result_12921221 = (a_12921219 - b_12921220);

  return result_12921221;

}
function HEX2D_12921665(a_12921667, b_12921668) {
  var result_12921669 = ({seconds: 0, nanosecond: 0});

    nimCopy(result_12921669, initDuration_11825446(HEX2D_12921217(a_12921667.ticks, b_12921668.ticks), 0, 0, 0, 0, 0, 0, 0), NTI11798243);

  return result_12921669;

}
function some_12535006(val_12535009) {
  var result_12535011 = ({val: 0, has: false});

    result_12535011.has = true;
    result_12535011.val = val_12535009;

  return result_12535011;

}
function process_12970422(timer_12970425) {
          var Tmp3;
          var Tmp4;

  var result_12970430 = ({val: 0, has: false});

    var count_12970460 = len_12940054(timer_12970425.queue);
    var now_12970461 = getMonoTime_12921414();
    L1: do {
        L2: while (true) {
          if (!(0 < count_12970460)) Tmp3 = false; else {            Tmp3 = HEX3CHEX3D_12921737(HEX5BHEX5D_12940094(timer_12970425.queue, 0).finishAt, now_12970461);          }        if (!Tmp3) break L2;
          var item_12975419 = pop_12975021(timer_12970425.queue);
          var distance_12975420 = subInt(item_12975419.finishTick, timer_12970425.wheel.currentTime);
          if ((0 <= distance_12975420)) {
          Tmp4 = distance_12975420;
          }
          else {
          Tmp4 = 0;
          }
          
          var timeout_12980001 = Tmp4;
          update_12965014(timer_12970425, chckRange(timeout_12980001, 0, 2147483647));
          count_12970460 = subInt(count_12970460, 1);
        }
    } while(false);
    if ((len_12940054(timer_12970425.queue) == 0)) {
    nimCopy(result_12970430, none_12980038(), NTI12980044);
    }
    else {
      var millisecs_12980083 = inMilliseconds_11900224(HEX2D_12921665(HEX5BHEX5D_12940094(timer_12970425.queue, 0).finishAt, getMonoTime_12921414()));
      nimCopy(result_12970430, some_12535006(addInt(chckRange(millisecs_12980083, -2147483648, 2147483647), 1)), NTI12390631);
    }
    

  return result_12970430;

}
function poll_12980102(timer_12980105, timeout_12980106) {
    var final_12980108 = HEX2B_12350435(now_12350371(), initDuration_11825446(0, 0, timeout_12980106, 0, 0, 0, 0, 0));
    L1: do {
        L2: while (true) {
        if (!HEX3C_12350489(now_12350371(), final_12980108)) break L2;
        }
    } while(false);
    process_12970422(timer_12980105);

  
}
function cancel_3705039(s_3705042, eventNode_3705043) {
    var colontmp__13090344 = {Field0: eventNode_3705043.value.level, Field1: eventNode_3705043.value.scheduleAt};
    var level_3705045 = colontmp__13090344["Field0"];
    var scheduleAt_3705046 = colontmp__13090344["Field1"];
    if (remove_3675255(s_3705042.slots[chckIndx(level_3705045, 0, (s_3705042.slots).length-1)][chckIndx(scheduleAt_3705046, 0, (s_3705042.slots[chckIndx(level_3705045, 0, (s_3705042.slots).length-1)]).length-1)], eventNode_3705043)) {
    s_3705042.taskCounter = subInt(s_3705042.taskCounter, 1);
    }
    

  
}
function cancel_12945019(s_12945022, eventNode_12945023) {
    cancel_3705039(s_12945022.wheel, eventNode_12945023);

  
}
function HEX3Aanonymous_12980204(args_12980206, args_12980206_Idx) {
    count_12980203[0] = addInt(count_12980203[0], 1);

  
}
function HEX3Aanonymous_13040204(args_13040206, args_13040206_Idx) {
    count_13040203[0] = addInt(count_13040203[0], 1);

  
}
function HEX3Aanonymous_13040227(args_13040229, args_13040229_Idx) {
  
}
function HEX3Aanonymous_13070204(args_13070206, args_13070206_Idx) {
    count_13070203[0] = addInt(count_13070203[0], 1);

  
}
function HEX3Aanonymous_13080204(args_13080206, args_13080206_Idx) {
    count_13080203[0] = addInt(count_13080203[0], 1);

  
}
L1: do {
  var t_12980201 = [initTimer_12931072(1)];
  var count_12980203 = [0];
  var event0_12980226 = [initTimerEvent_3660014(HEX3Aanonymous_12980204, null, 0)];
  add_12940204(t_12980201[0], event0_12980226[0], 10, 1);
  if (!((count_12980203[0] == 0))) {
  failedAssertImpl_2535480(makeNimstrLit("t_timer.nim(24, 12) `count == 0` "));
  }
  
  poll_12980102(t_12980201[0], 10);
  if (!((count_12980203[0] == 1))) {
  failedAssertImpl_2535480((makeNimstrLit("t_timer.nim(26, 12) `count == 1` ") || []).concat(cstrToNimstr((count_12980203[0])+"") || []));
  }
  
  add_12940204(t_12980201[0], event0_12980226[0], 10, 5);
  L2: do {
    var i_13000211 = [0];
    var i_13090246 = 0;
    L3: do {
        L4: while (true) {
        if (!(i_13090246 < 5)) break L4;
          i_13000211[0] = i_13090246;
          poll_12980102(t_12980201[0], 10);
          i_13090246 = addInt(i_13090246, 1);
        }
    } while(false);
  } while(false);
  if (!((count_12980203[0] == 6))) {
  failedAssertImpl_2535480(makeNimstrLit("t_timer.nim(32, 12) `count == 6` "));
  }
  
  add_12940204(t_12980201[0], event0_12980226[0], 16, 1);
  poll_12980102(t_12980201[0], 17);
  if (!((count_12980203[0] == 7))) {
  failedAssertImpl_2535480((makeNimstrLit("t_timer.nim(36, 12) `count == 7` ") || []).concat(cstrToNimstr((count_12980203[0])+"") || []));
  }
  
  add_12940204(t_12980201[0], event0_12980226[0], 25, 1);
  poll_12980102(t_12980201[0], 25);
  if (!((count_12980203[0] == 8))) {
  failedAssertImpl_2535480(makeNimstrLit("t_timer.nim(40, 12) `count == 8` "));
  }
  
  add_12940204(t_12980201[0], event0_12980226[0], 1, -1);
  L5: do {
    var i_13030211 = [0];
    var i_13090249 = 0;
    L6: do {
        L7: while (true) {
        if (!(i_13090249 < 10)) break L7;
          i_13030211[0] = i_13090249;
          poll_12980102(t_12980201[0], 1);
          i_13090249 = addInt(i_13090249, 1);
        }
    } while(false);
  } while(false);
  if (!((count_12980203[0] == 18))) {
  failedAssertImpl_2535480((makeNimstrLit("t_timer.nim(47, 12) `count == 18` ") || []).concat(cstrToNimstr((count_12980203[0])+"") || []));
  }
  
} while(false);
L8: do {
  var t_13040201 = [initTimer_12931072(1)];
  var count_13040203 = [0];
  var event0_13040226 = [initTimerEvent_3660014(HEX3Aanonymous_13040204, null, 0)];
  var event1_13040243 = [initTimerEvent_3660014(HEX3Aanonymous_13040227, null, 0)];
  var n1_13040246 = add_12940204(t_13040201[0], event0_13040226[0], 15, 1);
  cancel_12945019(t_13040201[0], n1_13040246);
  cancel_12945019(t_13040201[0], n1_13040246);
  cancel_12945019(t_13040201[0], n1_13040246);
  poll_12980102(t_13040201[0], 16);
  if (!((count_13040203[0] == 0))) {
  failedAssertImpl_2535480(makeNimstrLit("t_timer.nim(65, 12) `count == 0` "));
  }
  
  var n2_13050204 = add_12940204(t_13040201[0], event0_13040226[0], 198, 1);
  add_12940204(t_13040201[0], event1_13040243[0], 12, 1);
  poll_12980102(t_13040201[0], 13);
  cancel_12945019(t_13040201[0], n2_13050204);
  poll_12980102(t_13040201[0], 200);
  if (!((count_13040203[0] == 0))) {
  failedAssertImpl_2535480((makeNimstrLit("t_timer.nim(75, 12) `count == 0` ") || []).concat(cstrToNimstr((count_13040203[0])+"") || []));
  }
  
  var n3_13060203 = add_12940204(t_13040201[0], event0_13040226[0], 18, 1);
  add_12940204(t_13040201[0], event1_13040243[0], 12, 1);
  cancel_12945019(t_13040201[0], n3_13060203);
  poll_12980102(t_13040201[0], 13);
  if (!((count_13040203[0] == 0))) {
  failedAssertImpl_2535480((makeNimstrLit("t_timer.nim(82, 12) `count == 0` ") || []).concat(cstrToNimstr((count_13040203[0])+"") || []));
  }
  
} while(false);
L9: do {
  var t_13070201 = [initTimer_12931072(10)];
  var count_13070203 = [0];
  var event0_13070226 = [initTimerEvent_3660014(HEX3Aanonymous_13070204, null, 0)];
  var a_13070229 = [add_12940204(t_13070201[0], event0_13070226[0], 20, 1)];
  var b_13070232 = [add_12940204(t_13070201[0], event0_13070226[0], 15, 1)];
  cancel_12945019(t_13070201[0], b_13070232[0]);
  poll_12980102(t_13070201[0], 4);
  poll_12980102(t_13070201[0], 1);
  cancel_12945019(t_13070201[0], a_13070229[0]);
  poll_12980102(t_13070201[0], 200);
  if (!((count_13070203[0] == 0))) {
  failedAssertImpl_2535480((makeNimstrLit("t_timer.nim(100, 12) `count == 0` ") || []).concat(cstrToNimstr((count_13070203[0])+"") || []));
  }
  
} while(false);
L10: do {
  var t_13080201 = [initTimer_12931072(1)];
  var count_13080203 = [0];
  var event0_13080226 = [initTimerEvent_3660014(HEX3Aanonymous_13080204, null, 0)];
  L11: do {
    var i_13080236 = [0];
    var res_13090255 = 1;
    L12: do {
        L13: while (true) {
        if (!(res_13090255 <= 10)) break L13;
          i_13080236[0] = res_13090255;
          add_12940204(t_13080201[0], event0_13080226[0], 10, 1);
          res_13090255 = addInt(res_13090255, 1);
        }
    } while(false);
  } while(false);
  poll_12980102(t_13080201[0], 20);
  if (!((count_13080203[0] == 10))) {
  failedAssertImpl_2535480((makeNimstrLit("t_timer.nim(112, 12) `count == 10` ") || []).concat(cstrToNimstr((count_13080203[0])+"") || []));
  }
  
} while(false);
